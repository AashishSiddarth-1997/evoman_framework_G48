import math
import random
import numpy as np
from os import listdir
import os
from os.path import isfile, join
from game import *
import glob 
 
# Reads parameter files. This is the file that must be configured to define game/experiments settings.
f = open('parameters.txt','r')
parameters = []
for l in f.readlines():        
    parameters.append(l.split(' '))
f.close()
########################## Game parameters. ##########################
enemy  =         int(parameters[0][0]) # Choose from 1 to 8.
level =          int(parameters[1][0]) # Choose from 1 to 3.
playermode  =    str(parameters[2][0]) # Choose between ai and human.
enemymode =      str(parameters[3][0]) # Choose between ai and static. 
speed =          str(parameters[4][0]) # Choose between normal and fastest. 
inputs_coded =   str(parameters[5][0]) # Choose between yes or no.
finalsolution =  str(parameters[6][0]) # Choose between yes or no. 
experimentmode = str(parameters[7][0]) ## Choose between training/testing.
randomini =      str(parameters[8][0]) ## Choose between yes or no.
newpop =         str(parameters[9][0]) # Choose between yes for new random population or no for continuing from a saved population. 
#######################################################################


# If the game is to be ran in player normal mode. 

bests = [] 
for file in glob.glob("checks/best_*.txt"):

	if file[0:11]=='checks/best':
		bests.append(int(file.split('.')[0].split('_')[1]))

if len(bests)>0:
	fim_i = max(bests)

 
if finalsolution == 'yes':

        final = 99
        genome = numpy.loadtxt('checks/best_'+str(final)+'.txt')

        for i in range(0,99):

            game = Game()
            game.enemyn = enemy                 
            f,p,e,t = game.play(genome)  

            print ' try '+str(i)+ ' f '+ str(f)+ ' p '+ str(p) + ' e ' + str(e)

else:

    for i in range (0,fim_i+1):

        genome = numpy.loadtxt('checks/best_'+str(i)+'.txt')

        game = Game()
        game.enemyn = enemy                 
        f,p,e,t = game.play(genome)  

        print 'ge '+str(i)+ ' f '+ str(f)+ ' p '+ str(p) + ' e ' + str(e)



   
